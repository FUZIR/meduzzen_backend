name: Django workflow test

on:
  push:
    branches:
      - "**"

jobs:
  install_poetry:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Save Poetry as artifact
        uses: actions/upload-artifact@v4
        with:
          name: poetry
          path: ~/.local

  setup:
    runs-on: ubuntu-latest
    needs: install_poetry
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Download Poetry artifact
        uses: actions/download-artifact@v4
        with:
          name: poetry
          path: ~/.local

      - name: Set up cache
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

  lint:
    runs-on: ubuntu-latest
    needs: [install_poetry, setup]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Download Poetry artifact
        uses: actions/download-artifact@v3
        with:
          name: poetry
          path: ~/.local

      - name: Add Poetry to PATH
        run: echo "~/.local/bin" >> $GITHUB_PATH

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Configure Poetry to use existing virtual environment
        run: poetry config virtualenvs-path .venv

      - name: Run linter
        run: poetry run ruff check
