name: Run Django Tests
on:
  push:
    branches:
      - "**"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      poetry-cache-path: ${{ steps.poetry-cache-path.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Cache Poetry dependencies
        id: poetry-cache-path
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        if: steps.poetry-cache-path.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Save virtual environment as artifact
        if: always()
        run: tar -czf .venv.tar.gz .venv
      - name: Upload virtual environment
        uses: actions/upload-artifact@v3
        with:
          name: venv
          path: .venv.tar.gz

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download virtual environment
        uses: actions/download-artifact@v3
        with:
          name: venv
          path: .

      - name: Extract virtual environment
        run: tar -xzf .venv.tar.gz

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Run ruff lint
        run: poetry run ruff check