name: Django Testing
run-name: ${{github.actor}} is testing out Django ðŸš€
on:
  push:
    branches:
      - "develop"

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting Django project
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run linter(Ruff)
        run: poetry run ruff .

  migrations:
    name: Migrations Test
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{POSTGRES_DB}}
    env:
      POSTGRES_USER: ${{POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{POSTGRES_DB}}
      POSTGRES_HOST: ${{POSTGRES_HOST}}
      POSTGRES_PORT: ${{POSTGRES_PORT}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run migrations
        run: poetry run python -m core.manage makemigrations

  tests:
    name: Django Test
    needs: [ lint, migrations ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Tests
        run: poetry run python -m core.manage test