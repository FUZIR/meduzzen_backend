name: Django Testing
run-name: ${{github.actor}} is testing out Django ðŸš€
on:
  push:
    branches:
      - "**"

jobs:
  setup:
    name: Setup Enviroment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: poetry install --no-root
  lint:
    runs-on: ubuntu-latest
    name: Linting Django project
    needs: setup
    steps:
      - name: Run linter(Ruff)
        run: poetry run ruff check

  migrations:
    name: Migrations Test
    needs: [ setup,lint ]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    steps:
      - name: Run migrations
        run: poetry run python -m core.manage makemigrations

  tests:
    name: Django Test
    needs: [ setup, lint, migrations ]
    runs-on: ubuntu-latest
    steps:
      - name: Run Tests
        run: poetry run python -m core.manage test